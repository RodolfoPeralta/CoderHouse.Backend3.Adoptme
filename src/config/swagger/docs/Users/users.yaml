paths:
  /api/users/:
    get:
      summary: To obtain all users
      tags:
       - Users
      responses:
        "200":
          description: "Users succesfully obtained from database"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/User'
        "500":
          description: "Internal Server Error"
  /api/users/{uid}:
    get:
      summary: To obtain an specific user by id
      tags:
        - Users
      parameters:
      - name: uid
        in: paths
        required: true
        description: user id
        schema:
          $type: String
      responses:
        "200":
          description: User succesfully obtained from database by id
          content:
            application/json:
              schema:
                $ref: '#components/schemas/User'
        "400":
          description: User id is required
        "404":
          description: User with id "uid" not found
        "500":
          description: Internal Server Error
    put:
      summary: To update an existing user
      tags:
       - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: user id
        schema:
          $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'
      responses:
        "200":
          description: User updated succesfully
        "400":
          description: User id is required or some value in the request body is missing or wrong
        "500":
          description: Internal Server Error
    delete:
      summary: To delete an existing user
      tags:
       - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: user id
        schema:
          $type: String
      responses:
        "200":
          description: User successfully deleted
        "400":
          description: User id is required
        "404":
          description: User with id "uid" not found
        "500":
          description: Internal Server Error


      
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: autogenerated mongo id
        first_name:
          type: String
          description: user first firstname
        last_name:
          type: String
          description: user lastname
        email:
          type: String
          description: user email, is unique
        password:
          type: String
          description: user hash password
        pets:
          type: Array
          description: pets array
        role:
          type: String
          description: user role (admin or user)
        timestampLastLogin:
          type: String
          description: User last login 
      example:
        _id: ObjectId('68532aee00a6fefe17694ace')
        first_name: Patricia
        last_name: Domínguez Parra
        email: Sergio8@gmail.com
        password: $2b$10$9Z4C9fuOYahxrox3Zk.oMeNxEUV9zkjKXJ.w6aNdggLoIfxEB0uEK
        role: admin
        timestampLastLogin: 2025-07-01T22:19:16.100Z
  requestBodies:
    updateUser:
      type: object
      properties:
        first_name:
          type: String
          description: user first firstname
        last_name:
          type: String
          description: user lastname
        email:
          type: String
          description: user email, is unique
        password:
          type: String
          description: user hash password
      example:
        first_name: Patricia
        last_name: Domínguez Parra
        email: Sergio8@gmail.com
        password: 123456
