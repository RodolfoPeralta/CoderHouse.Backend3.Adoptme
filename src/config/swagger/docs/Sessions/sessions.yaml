paths:
  /api/sessions/register:
    post:
      summary: To register a new user into the application
      tags:
      - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/userRegister'
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Session'
        "400":
          description: Some parameter in the request body is missing or the user is already exists
        "500":
          description: Internal Server Error
  /api/sessions/login:
    post:
      summary: To login in the application with a registered user
      tags:
      - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/userLogin'
      responses:
        "200":
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Session'
        "400":
          description: Some parameter in the request body is missing or password is wrong
        "404":
          description: User not found
        "500":
          description: Internal Server Error
  /api/sessions/current:
    get:
      summary: To obtain logged in user information
      tags:
      - Sessions
      security:
      - bearerAuth: []
      responses:
        "200":
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Current'
        "401":
          description: User unauthorized or inavalid token
        "500":
          description: Internal Server Error 

components:
  schemas:
    Session:
      type: object
      properties:
        token:
          type: String
          description: User token
        name:
          type: String
          description: User full name
        role:
          type: String
          description: User role
        email:
          type: String
          description: User email
        timestampLastLogin:
          type: String
          description: User last login
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImZpcnN0X25hbWUiOiJSb2RvbGZvIiwibGFzdF9uYW1lIjoiUGVyYWx0YSIsImVtYWlsIjoicm9kb2xmb3BlcmFsdGExOTk0QGhvdG1haWwuY29tIiwicGFzc3dvcmQiOiIkMmIkMTAkekdobTFseGM2OU9LeENXTFVydk1HT25qaEp6M2xib0dKb0FrNHBUN0lJbi8yMnJHUjQ3eFMifSwiaWF0IjoxNzUwNTE3MTMyLCJleHAiOjE3NTA1MjA3MzJ9.LVnN9XujM7jX_OF_gRY9kulD-cX7AJoEyvZjHW52TpU
        name: Rodolfo Peralta
        role: user
        email: rodolfoperalta1994@hotmail.com
        timestampLastLogin: 2025-07-01T22:19:16.100Z
    Current:
      type: object
      properties:
        name:
          type: String
          description: User full name
        role:
          type: String
          description: User role
        email:
          type: String
          description: User email
        timestampLastLogin:
          type: String
          description: User last login
      example:
        name: Rodolfo Peralta
        role: user
        email: rodolfoperalta1994@hotmail.com
        timestampLastLogin: 2025-07-01T22:19:16.100Z
  securitySchemas:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:
    userRegister:
      type: object
      properties:
        first_name:
          type: String
          description: user first firstname
        last_name:
          type: String
          description: user lastname
        email:
          type: String
          description: user email, is unique
        password:
          type: String
          description: user hash password
      example:
        first_name: Rodolfo
        last_name: Peralta
        email: rodolfoperalta1994@hotmail.com
        password: "123456"
    userLogin:
      type: object
      properties:
        email:
          type: String
          description: user email, is unique
        password:
          type: String
          description: user hash password
      example:
        email: rodolfoperalta1994@hotmail.com
        password: "123456"

